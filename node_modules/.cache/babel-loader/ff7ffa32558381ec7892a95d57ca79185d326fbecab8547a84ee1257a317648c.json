{"ast":null,"code":"var _jsxFileName = \"D:\\\\2 \\u043A\\u0443\\u0440\\u0441 \\u0421\\u0438\\u0441\\u0442\\u0435\\u043C\\u043D\\u0430 \\u0406\\u043D\\u0436\\u0435\\u043D\\u0435\\u0440\\u0456\\u044F\\\\\\u0412\\u0435\\u0431\\u043A\\u0430\\\\Web-technologies-and-web-design-6\\\\ecommerce-app\\\\src\\\\ProductTile.js\";\nimport React from 'react';\nimport styled from 'styled-components';\n\n// Використовуємо деструктуризацію з $ для image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TileWrapper = styled.div`\n  border: 1px solid #ddd;\n  padding: 20px;\n  border-radius: 15px;\n  text-align: center;\n  width: 250px;\n  margin: 15px;\n  background-color: #fff;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);\n  }\n`;\n\n// Використовуємо $image, щоб пропс не передавався в DOM\n_c = TileWrapper;\nconst TileImage = styled.div`\n  background-color: #ffe4e1;\n  height: 150px;\n  margin-bottom: 15px;\n  background-image: ${({\n  $image\n}) => `url(${$image})`};\n  background-size: cover;\n  background-position: center;\n  border-radius: 10px;\n`;\n_c2 = TileImage;\nconst Title = styled.h2`\n  font-size: 1.5em;\n  margin-bottom: 10px;\n  color: #d81b60;\n  font-family: 'Montserrat', sans-serif;\n`;\n_c3 = Title;\nconst Description = styled.p`\n  font-size: 1em;\n  color: #777;\n`;\n_c4 = Description;\nconst ProductTile = ({\n  title,\n  description,\n  image\n}) => {\n  return /*#__PURE__*/_jsxDEV(TileWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(TileImage, {\n      $image: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c5 = ProductTile;\nexport default ProductTile;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TileWrapper\");\n$RefreshReg$(_c2, \"TileImage\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Description\");\n$RefreshReg$(_c5, \"ProductTile\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","TileWrapper","div","_c","TileImage","$image","_c2","Title","h2","_c3","Description","p","_c4","ProductTile","title","description","image","children","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["D:/2 курс Системна Інженерія/Вебка/Web-technologies-and-web-design-6/ecommerce-app/src/ProductTile.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Використовуємо деструктуризацію з $ для image\r\nconst TileWrapper = styled.div`\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  text-align: center;\r\n  width: 250px;\r\n  margin: 15px;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\n// Використовуємо $image, щоб пропс не передавався в DOM\r\nconst TileImage = styled.div`\r\n  background-color: #ffe4e1;\r\n  height: 150px;\r\n  margin-bottom: 15px;\r\n  background-image: ${({ $image }) => `url(${$image})`};\r\n  background-size: cover;\r\n  background-position: center;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.5em;\r\n  margin-bottom: 10px;\r\n  color: #d81b60;\r\n  font-family: 'Montserrat', sans-serif;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 1em;\r\n  color: #777;\r\n`;\r\n\r\nconst ProductTile = ({ title, description, image }) => {\r\n  return (\r\n    <TileWrapper>\r\n      <TileImage $image={image} />\r\n      <Title>{title}</Title>\r\n      <Description>{description}</Description>\r\n    </TileWrapper>\r\n  );\r\n};\r\n\r\nexport default ProductTile;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GAjBMF,WAAW;AAkBjB,MAAMG,SAAS,GAAGN,MAAM,CAACI,GAAG;AAC5B;AACA;AACA;AACA,sBAAsB,CAAC;EAAEG;AAAO,CAAC,KAAK,OAAOA,MAAM,GAAG;AACtD;AACA;AACA;AACA,CAAC;AAACC,GAAA,GARIF,SAAS;AAUf,MAAMG,KAAK,GAAGT,MAAM,CAACU,EAAE;AACvB;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,KAAK;AAOX,MAAMG,WAAW,GAAGZ,MAAM,CAACa,CAAC;AAC5B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,WAAW;AAKjB,MAAMG,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,WAAW;EAAEC;AAAM,CAAC,KAAK;EACrD,oBACEhB,OAAA,CAACC,WAAW;IAAAgB,QAAA,gBACVjB,OAAA,CAACI,SAAS;MAACC,MAAM,EAAEW;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5BrB,OAAA,CAACO,KAAK;MAAAU,QAAA,EAAEH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtBrB,OAAA,CAACU,WAAW;MAAAO,QAAA,EAAEF;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAElB,CAAC;AAACC,GAAA,GARIT,WAAW;AAUjB,eAAeA,WAAW;AAAC,IAAAV,EAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAU,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAd,GAAA;AAAAc,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}